AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Order Processing System using Go and SAM

Resources:

  ## Queues, Tables, and Buckets
  OrderQueue:
    Type: AWS::SQS::Queue

  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OrdersTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: orderId
          AttributeType: S
      KeySchema:
        - AttributeName: orderId
          KeyType: HASH

  ReceiptsBucket:
    Type: AWS::S3::Bucket

  ## Functions

  ReceiveOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: receive-order
      Runtime: provided.al2
      MemorySize: 128
      Timeout: 30
      Architectures: 
        - arm64
      Handler: bootstrap      
      CodeUri: .
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: post
      Environment:
        Variables:
          QUEUE_URL: !GetAtt OrderQueue.QueueUrl
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt OrderQueue.QueueName

  ProcessOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: process-order
      Runtime: provided.al2
      MemorySize: 128
      Timeout: 30
      Architectures:
        - arm64
      Handler: bootstrap
      CodeUri: .
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt OrderQueue.Arn
      Environment:
        Variables:
          TABLE_NAME: OrdersTable
          BUCKET_NAME: !Ref ReceiptsBucket
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
        - S3CrudPolicy:
            BucketName: !Ref ReceiptsBucket

  GetReceiptFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-receipt
      Runtime: provided.al2
      MemorySize: 128
      Timeout: 30
      Architectures:
        - arm64
      Handler: bootstrap
      CodeUri: .
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /receipt/{orderId}
            Method: get
      Environment:
        Variables:
          TABLE_NAME: !Ref OrdersTable
          BUCKET_NAME: !Ref ReceiptsBucket
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref OrdersTable
        - S3ReadPolicy:
            BucketName: !Ref ReceiptsBucket